#include <stdio.h>
#include <stdlib.h>
#include <string.h>

// Fungsi untuk menampilkan question
void displayquestion(char *question, char *option[])
{
    printf("%s\n", question);
    for (int i = 0; i < 4; i++)
    {
        printf("    %d. %s\n", i + 1, option[i]);
    }
}

// Fungsi untuk memeriksa answer yang diberikan oleh pengguna
int answerchecker(int answer, int correctanswer)
{
    if (answer == correctanswer)
    {
        printf("\n-------------------------\n");
        printf("|Your answer is correct!|\n");
        printf("-------------------------\n\n");
        return 1;
    }
    else
    {
        printf("-----------------------------------------------\n");
        printf("|Your answer is wrong. The correct answer is %d|\n", correctanswer);
        printf("-----------------------------------------------\n\n");
        return 0;
    }
}

void welcome()
{
    printf("==================================================\n");
    printf("||                   Welcome to                 ||\n");
    printf("||          Who Wants To Be A Millionaire       ||\n");
    printf("==================================================\n");
    printf("||        Get ready to play and win big!        ||\n");
    printf("==================================================\n");
    printf("Lets create an account first\n");
    printf("1. Yes\n");
    printf("2. No\n");
}

int main(int argc, char *argv[])
{
    system("cls");
    char username[20], password[20], passcheck[20];
    char account[20];
    int cntrl = 0, found = 0, choose;
    char *question[5] = {
        "1. What is the capital city of Indonesia?",
        "2. Who is the first president of Indonesia?",
        "3. Who is the founder of Thelephone?",
        "4. Who is the founder of computer algorithm?",
        "5. Who is the founder of Microsoft?"};

    char *option[5][4] = {
        {"Jakarta", "Surabaya", "Bandung", "Bali"},
        {"Joko Widodo", "Susilo Bambang Yudhoyono", "Soekarno", "Megawati Soekarnoputri"},
        {"Thomas Alva Edison", "Alexander Graham Bell", "Nikola Tesla", "Michael Faraday"},
        {"Ada Lovelace", "Charles Babbage", "Alan Turing", "Tim Berners-Lee"},
        {"Bill Gates", "Steve Jobs", "Mark Zuckerberg", "Jeff Bezos"}};

    int correctanswer[5] = {1, 3, 2, 2, 1};
    int score = 0, input;

    FILE *fp;

    if (argc == 3)
    {
        goto login;
    }

    welcome();
    printf("Please insert an input : ");
    scanf("%d", &input);

    if (input == 1)
    {
        if ((fp = fopen("database/login.bin", "wb")) == NULL)
        {
            printf("Error!\n");
            return EXIT_FAILURE;
        }

        printf("Welcome to Register Session\n");
        fflush(stdin);
        printf("Enter your username: ");
        fgets(username, 20, stdin);
        username[strcspn(username, "\n")] = 0;
        printf("\nEnter your password: ");
        fgets(password, 20, stdin);
        password[strcspn(password, "\n")] = 0;
    pass:
        printf("\nRe-confirm password: ");
        fgets(passcheck, 20, stdin);
        passcheck[strcspn(passcheck, "\n")] = 0;


        while (password != passcheck)
        {
            if (strcmp(password, passcheck) == 0)
            {
                printf("\nYour account has been created\n");
                break;
            }
            else
            {
                printf("\nInvalid password!!\n");
                goto pass;
            }
        }

        sprintf(account, "%s@%s", username, password);
        fwrite(account, sizeof(char), sizeof(account) / sizeof(char), fp);
        fputc('\n', fp);

        fclose(fp);
        printf("Please proceed to login by : ./FileMainProgram.exe username password\n");

        return EXIT_SUCCESS;
    }
    else
    {
        return EXIT_FAILURE;
    }

login:
    if ((fp = fopen("database/login.bin", "rb")) == NULL)
    {
        printf("Error!, Opening file failed!");
        return EXIT_FAILURE;
    }

    char usernameinput[10], passwordinput[10];
    strcpy(usernameinput, argv[1]);
    strcpy(passwordinput, argv[2]);

    fread(account, sizeof(char), sizeof(account) / sizeof(char), fp);

    fclose(fp);

    char *record[3];

    record[0] = strtok(account, "@");
    while (record[cntrl++] != NULL)
    {
        record[cntrl] = strtok(NULL, "@");
    }

    strcpy(username, record[0]);
    strcpy(password, record[1]);

    if ((strcmp(usernameinput, username) == 0) && (strcmp(passwordinput, password) == 0))
    {
        printf("|Login Succes!, Welcome %s|\n", username);

        for (int i = 0; i < 5; i++)
        {
            displayquestion(question[i], option[i]);
            int answer;
            printf("Pull up your answer (1-4): ");
            scanf("%d", &answer);
            if (answerchecker(answer, correctanswer[i]))
            {
                score += 200000;
            }
            else
            {
                printf("You failed in this game\n");
                printf("Your total score is: %d\n", score);
                exit(0);
            }
        }
    }

    // Jika pengguna berhasil menjawab semua question
    printf("Congratulation!, you won the prize of $1.000.000\n");
    printf("Your total score is: %d\n", score);

    return 0;
}
